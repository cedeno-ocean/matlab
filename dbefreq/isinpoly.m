function  isin = isinpoly(x,y,xp,yp)% ISIN = ISINPOLY(X,Y,XP,YP)   Finds whether points with%    coordinates X and Y are inside or outside of a polygon with vertices%    Returns matrix ISIN of the same size as X and Y  with 0 for points %    outside a polygon, 1 for inside points and  0.5 for points belonging%    to a polygon XP, YP itself.%% Here is a demo:%			x=rand(90,1);%			y=rand(90,1);%			xp = rand(6,1);%			yp=rand(6,1);%			isin = isinpoly(x,y,xp,yp);%			plot(x,y,'.',xp,yp,x(isin),y(isin),'o')%  Kirill Pankratov,  kirill@plume.mit.edu%  April 10, 1994% Handle input ::::::::::::::::::::::::::::::::if nargin<4  disp([10 '  Error: not enough input arguments.' 10])  returnendxp = [xp(:); xp(1)];yp = [yp(:); yp(1)];sz = size(x);x = x(:); y = y(:);lp = length(xp); l = length(x);ep = ones(1,lp); e = ones(1,l);A = diff(atan2(yp(:,e)-y(:,ep)',xp(:,e)-x(:,ep)'))/2/pi;A = A+(A<-.5)-(A>.5);isin = abs(sum(A));% Check for boundary pointsA = (yp(:,e)-y(:,ep)').^2+(yp(:,e)-y(:,ep)').^2;fnd = find(any(A==0));isin(fnd) = .5*ones(size(fnd));% Reshape output to the input sizeisin = reshape(isin,sz(1),sz(2));