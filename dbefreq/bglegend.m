function bglegend(linetype,names,flag)%usage:  bglegend(linetype,names);         %for linear plot%   or:  bglegend(linetype,names,flag);    %for any kind of plot%This functions displays a legend at the location selected with the mouse.%    linetype  -- is a string matrix with the line types used in the plot%    names     -- is a string matrix of names which appear next to the lines%                 on the legend%    flag      -- is an optional argument,%                 if flag = 0, then the plot is linear%                 if flag = 1, then the plot is semilogy%                 if flag = 2, then the plot is semilogx%                 if flag = 3, then the plot is loglog%%Example:      %>> x=[1:20];%>> plot(x,sin(x),'-',x,cos(x),'--')%>> lt=['- ';'--'];%>> nm=['SIN';'COS'];%>> bglegend(lt,nm)%%Note that all the rows in a string matrix must be the same size.%%For greek letters, put a tilde (~) before the letter %(in the variable names) and that%letter will be printed in symbol font. (only in Matlab 4.0)%%May want to change some positioning variables for Matlab 3.5 % at least one is suggested down in the code (look for Matlab 3.5)% B. K. Gardner 1-14-85% Copyright (c) 1993 by Bryce Gardnerflag2=0;flag3=0;v=axis;[nlines,z]=size(linetype);xspacing=20;yspacing=20;% yspacing=20 is good for normal plot (in Matlab 4.0)% yspacing=10 is good for half plot (2 vertical subplots) (in Matlab 4.0)dx=(v(2)-v(1))/xspacing;dy=(v(4)-v(3))/yspacing;if exist('flag') == 1,  if flag == 1,    dy=(v(4)/v(3))^(1/yspacing);    flag2 = 1;  end  if flag == 2,    dx=(v(2)/v(1))^(1/xspacing);    flag3 = 1;  end  if flag == 3,    dx=(v(2)/v(1))^(1/xspacing);    dy=(v(4)/v(3))^(1/yspacing);    flag2 = 1;    flag3 = 1;  endenddisp('Select Upper-Left-Hand Corner of Legend')[x1,y1]=ginput(1);if flag3==0,  x=[x1,x1+dx];  x3=x1+3*dx/2;else,  x=[x1,x1*dx];  dx2=dx/2;  x3=x1*dx^(3/2);endy=[y1,y1];hold onif nlines>1, for i=2:nlines,   if flag2==0,     yn=y1-(i-1)*dy;   else,     yn=y1*dy^(-i+1);   end   y=[y;yn,yn]; end end%For greek letters, put a tilde (~) before the letter and that%letter will be printed in symbol font. (only in Matlab 4.0)for i=1:nlines,  changefont=0;  lt=linetype(i,:);  [row,col] = size(lt);  if  col == 1 ,      lt = lt(1);   else     if lt(2)==' ', lt=lt(1); end;  end  %Plot line type in legend  %In Matlab 3.5 need to move line up to the middle of the text  %for plots other than plot or semilogx you may need to experiment with 2.2/3 plot(x,y(i,:)+dy*1/3 ,lt) %Matlab 3.5 (comment out for 4.0)% plot(x,y(i,:),lt)           %Matlab 4.0 (comment out for Matlab 3.5)  nms=names(i,:);  nm=[];  greekstr=[];  lnms=length(nms);  j=1;  while j<=lnms,     if nms(j)=='~',	changefont=1;	greekstr=[greekstr,nms(j+1)];	nm=[nm,'  ']; %I assumed the greek letter takes 2 spaces.        j=j+2;     else,        greekstr=[greekstr,' '];	nm=[nm,nms(j)];        j=j+1;     end  end  text(x3,y(i,2),nm)  if changefont,    text(x3,y(i,2),greekstr,'FontName','symbol', ...                            'FontStrikeThrough','on')  endend hold off