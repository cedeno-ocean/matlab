function H_jk = siftstep(H_jkm1,opt)%Function H_jk = siftstep(H_jkm1,opt) - One iteration of EMD sifting process%  This function executes one iteration (sift) of Norden Huang's empirical%  mode decompostion (EMD) algorithm, based on Huang's equation:%%                       Hjk = Hj(k-1) - Mjk             [5.3]  %%  Where Hj(k-1) & Hjk are the penultimate and latest estimates of%  the j-th intrinsic mode function (IMF), respectively.%%  If opt ~= 0, a diagnostic plot is created. Default: opt = 0.%%  Huang, N.E., et al., 1998, Proc. R. Soc. Lond., 454: 903-995%  Created by D.B. Enfield, NOAA/AOML, Miami, FL (June, 2000)%%  See also: EXTREMA% Preliminaries...if nargin == 1, opt = 0; endif size(H_jkm1,2) == 1, H_jkm1 = H_jkm1'; endn = length(H_jkm1); x = 1:n; xx = [1:.05:n];% Find the minima and maxima of the input series[jmin,jmax] = extrema(H_jkm1,opt);jmin = [1,jmin,n]; jmax = [1,jmax,n];% Do spline fits of the minima and maxima, compute their meanHmin = spline(x(jmin),H_jkm1(jmin),xx);Hmax = spline(x(jmax),H_jkm1(jmax),xx);M_jk = mean([Hmin;Hmax]);% Re-decimate to the original data pointsM_jk = M_jk(1:20:length(M_jk));% Create the latest estimate of the j-th IMFH_jk = H_jkm1 - M_jk;if opt ~= 0	hold on	plot(xx,Hmin,'-b',xx,Hmax,'-r')	plot(x,M_jk,'-k','linewidth',2)end