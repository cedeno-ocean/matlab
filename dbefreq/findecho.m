function  [echo,section] = findecho(strmat,word)% FINDECHO  Finding "echo" or "reply" for each "word" in a string%      matrix WORD from a string matrix STRMAT%  Kirill K. Pankratov,  kirill@plume.mit.edu%  April 3, 1994chsec = ' '; % Sections must begin with this characterchsep = ' '; % Separator character of word from echochnf = '?';  % Substitute for "not found"tol = 4;     % Tolerance (minimum of coinciding characters)if nargin<2  disp([10 '  Error: you must specify the "dictionary" '...  'string matrix and the matrix of entries.' 10])end sz = size(strmat); % ## of rows with section heads:nums = find(strmat(:,1)==chsec); % Initialize "echo" and "section" matricesecho = ' ';section = ' '; % Find the echo for each row of matrix WORDfor jw = 1:size(word,1)  % Begin words cycle ````````````0  cword = word(jw,:);  cword = cword(1:max(find(cword~=' ')));  cword = [cword ' '];  lw = length(cword);  lmin = min(lw,sz(2));  A = strmat(:,1:lmin)==cword(ones(sz(1),1),:);  coinc = sum(A');   % Number of coinciding characters  cmax = max(coinc);  numb = find(coinc==cmax); % ## of rows  if cmax<min(tol,lw), numb=[]; end   % Find echo  if numb~=[]    cecho = strmat(numb(1),:);    issep = (cecho==chsep);    issep = issep(2:sz(2))-issep(1:sz(2)-1);    fnd = find(issep==-1)+1;    if fnd==[], fnd = sz(2); end    cecho = cecho(fnd(1):sz(2));    cecho = cecho(1:max(find(cecho~=' ')));    if cecho == [], cecho=' '; end  else    cecho = chnf;  end   % Find section  if numb~=[], issec = numb(1)>=nums;  else, issec = []; end  ns = max(find(issec));  if ns~=[]    csection = strmat(nums(ns),:);    csection = csection(1:max(find(csection~=' ')));  else    csection = chnf;  end   % Add to the output matrices  echo = str2mat(echo,cecho);  section = str2mat(section,csection);end  % End jw (words) cycle '''''''''''''''''''''''''''''0echo = echo(2:size(echo,1),:);section = section(2:size(section,1),:);