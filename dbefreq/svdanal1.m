function [modsum,ve,ec,u,v,s] = svdanal1(x)%Function [modsum,ve,ec] = svdanal1(x) %%      **** Simple SVD analysis of a single variable field ****%  If X is input with M columns as stations or variables and N rows as%  observations (e.g., ordered in time), then VE gives the (signed) %  variance explained over the variable (station) array (going down%  in rows) for modes (increasing to the right in columns). EC gives %  the normalized expansion coefficients over the observation dimension%  (e.g., time, going down in rows) for modes (increasing to the right %  in columns). MODSUM summarizes the mode statistics (mode#, eigenvalue, %  squared covariance fraction (SCF) and cumulative SCF (both expressed as %  percent of total). %%  Method:       [U,S,V] = SVD(X)%                     EC = f(U)   = normalized expansion coefficients%                     VE = g(U,X) = signed variance explained%%  Notes: X is demeaned and missing values are set == zeros. No standardi-%         zation of data is done. Use missing data with caution. %         MODSUM = {Mode# / Eigenvalue / % Var / Cum % Var} = mode summary,%         where the eigenvalues are obtain by a rescaling of the squared %         singular values.%%  References: Wallace et al. (1992: J.Climate, vol.5, 561-576)%              Bretherton et al. (1992: J.Climate, vol.5, 541-560)%%  Uses: NAN2MISS SVD ticdisp('Preparing the data...')[nr,nc]=size(x);x = nan2miss(x,0);                % Convert NaNs to zerosx = x - ones(nr,1)*mean(x);       % Demean the datadisp('Computing the SVD...')[u,s,v] = svd(x,0); u=-u; v=-v;   % Compute the SVD decompositiondisp('ECs and ModSum...')ec=u./(ones(nr,1)*std(u));        % Normalized expansion coefficientsev=diag(s).^2/(nr-1);             % Eigenvalues from singular valuesscf=100*ev/sum(ev);               % Squared covariance fraction (%)cscf=cumsum(scf);                 % CSCF = cumulative SCF (%)index=1:length(scf);              % Create the mode idicesmodsum=[index' ev scf cscf];      % Mode summary output matrixdisp('Variance explained...')[nu,mu]=size(u);[nv,mv]=size(v);ux=u'*x;                          % Cross covariance of [U,X]su2=sum(u.*u)'*ones(1,nv);        % Variance of U (varies down in rows)sx2=ones(mu,1)*sum(x.*x);         % Variance of X (varies to right, cloumns)hcm=((ux.^2)./su2)./sx2;          % Homogenous correlation matrixve=100*sign(ux').*hcm';           % Signed variance explained (%)% Reduce output array sizes (1st ten modes only)%modsum = modsum(1:10,:);ve = ve(:,1:24);ec = ec(:,1:24);disp(['Elapsed time = ' num2str(toc/60) ' minutes'])